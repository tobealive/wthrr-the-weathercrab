name: Release

on:
  workflow_call:

defaults:
  run:
    shell: bash # Convenience workaround for Windows.
env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-linux
          - os: windows-latest
            target: x86_64-windows
            # Apple targets are not properly signed. Users will have to mark the binaries as secure manually.
          - os: macos-11
            target: x86_64-apple-darwin
          - os: macos-latest
            target: arm64-apple-darwin
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install libfuse2
          sudo wget "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage" -O /usr/local/bin/appimagetool
          sudo chmod +x /usr/local/bin/appimagetool
          cargo install cargo-appimage
          cargo install cargo-deb
      - name: Build
        run: |
          cargo build --release --verbose
          if [[ $RUNNER_OS == "Linux" ]]; then
            cargo appimage
            cargo deb
          fi
      - name: Prepare artifacts
        run: |
          mkdir "${{ matrix.target }}"
          binary=wthrr
          if [[ $RUNNER_OS == "Windows" ]]; then
            binary+=.exe
          elif [[ $RUNNER_OS == "Linux" ]]; then
            mv ./target/appimage/wthrr.AppImage "./${{ matrix.target }}/"
            mv ./target/debian/wthrr*.deb "./${{ matrix.target }}/wthrr.deb"
          fi
          mv "./target/release/$binary" "./${{ matrix.target }}/"
          cp README.md LICENSE "${{ matrix.target }}/"
          [[ $RUNNER_OS == "tag" ]] && version="$GITHUB_REF" || version="$GITHUB_SHA"
          echo "ARTIFACT=wthrr-$version-${{ matrix.target }}" >> "$GITHUB_ENV"
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ matrix.target }}/**
      - name: Release
        if: github.ref_name == 'main' && github.ref_type == 'tag'
        uses: softprops/action-gh-release@v2
        with:
          files: ./artifacts/wthrr*
      - name: Publish on crates.io
        if: github.ref_name == 'main' && github.ref_type == 'tag'
        run: cargo publish --token ${{ secrets.CRATES_TOKEN }}
